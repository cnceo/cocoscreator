# coding=utf-8import sys;import re;import os;reload(sys);sys.setdefaultencoding( "utf-8" );android_replace = [u'package=".+?"',u'android:versionCode=".+?"',u'android:versionName=".+?"']prefex_android_replace = [u'package="',u'android:versionCode="',u'android:versionName="']ios_replace = [u'(<key>CFBundleDisplayName</key>.+?<string>).+?<',			   u'(<key>CFBundleVersion</key>.+?<string>).+?<',			   u'(<key>CFBundleShortVersionString</key>.+?<string>).+?<']def readData(filename):	file=open(filename,"r");	data = file.read();	file.close();	return datadef saveData(filename,data):	file=open(filename,"w");	file.write(data);	file.close();def updateProjectFile(proj_item):	print("sdfasdfasdf")	if proj_item['active']==0:		print(proj_item['proj_dir']+u"未创建,请确认active字段是否为1,1.为开启,0,为未创建工程");		return;	#检查当前的版本号	rootdir='frameworks/runtime-src/'+proj_item['proj_dir'];	if not os.path.exists(rootdir):		print("工程目录未创建,请创建并上传svn");		return;	isandroid=False;	if proj_item['macro']=='baibao':		isandroid=True;	if isandroid==False:		isandroid=proj_item['macro'].find("_ANDROID")!=-1;	if	isandroid:		#读取AndroidManifest.xml		AndroidManifestXmlName=rootdir + '/AndroidManifest.xml';		AndroidManifestData = readData(AndroidManifestXmlName)		content = [proj_item['packname'],proj_item['lversion'],proj_item['sversion']]		for i in range(0,len(android_replace)):			android_re = re.compile(android_replace[i])			AndroidManifestData = android_re.sub(prefex_android_replace[i]+ content[i] + '"',AndroidManifestData)		saveData(AndroidManifestXmlName,AndroidManifestData)		print(u"刷新了"+AndroidManifestXmlName);		# #更新strings.xml		stringsXmlName = rootdir + '/res/values/strings.xml';		stringsXmlData = readData(stringsXmlName)		appName_re = re.compile('<string name="app_name">.+?</string>')		stringsXmlData = appName_re.sub('<string name="app_name">'+ proj_item['appname'] + '</string>' ,stringsXmlData)		saveData(stringsXmlName,stringsXmlData)		print(u"刷新了"+stringsXmlName);	else:						#获取当前包名，显示版本号，逻辑版本号,app名字		#读取Info.plist		InfoPlistName=rootdir + '/ios/Info.plist';		InfoPlistData = readData(InfoPlistName)		content = [proj_item['appname'],proj_item['lversion'],proj_item['sversion']]		for i in range(0,len(ios_replace)):			def printresult(m):				return m.group(1)+ content[i] + '<'			ios_re = re.compile(ios_replace[i],re.S)			InfoPlistData = ios_re.sub(printresult,InfoPlistData)		saveData(InfoPlistName,InfoPlistData)		print(u"刷新了"+InfoPlistName);		# #修改包名		xcodeprojectname=rootdir + '/fsdzz.xcodeproj/project.pbxproj';		xcodeprojectData = readData(xcodeprojectname)		ios_appName_re = re.compile('PRODUCT_BUNDLE_IDENTIFIER = .+?;',re.S)		xcodeprojectData = ios_appName_re.sub('PRODUCT_BUNDLE_IDENTIFIER = ' + proj_item['packname'] + ';',xcodeprojectData)		saveData(xcodeprojectname,xcodeprojectData)		print(u"刷新了"+xcodeprojectname);