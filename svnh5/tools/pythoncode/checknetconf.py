# coding=utf-8import os,os.path;from biplist import *;import time;import tool;import xlsdic;import sys;import re;reload(sys);import urllib2;sys.setdefaultencoding( "utf-8" );import json;import urllib2;import urllib2;import tool;import updateproject;os.chdir("..");#表示上级目录import urllib;f=urllib.urlopen("http://192.168.1.254:1997/pythonclient?opid=getcfg");totalConf=json.loads(f.read()); lang_conf_name="lang_conf";proj_conf_name="proj_conf";net_conf_name="net_conf";logandpay_conf_name="logandpay_conf";channel_conf_name="channel_conf"; goods_conf_name="goods_conf"; lang_conf=totalConf[lang_conf_name];proj_conf=totalConf[proj_conf_name];tmp_conf=totalConf[net_conf_name];goods_conf=totalConf[goods_conf_name];ip_conf=totalConf["ip_conf"];logandpay_conf=totalConf[logandpay_conf_name];title_conf=totalConf["title_conf"];versioninfo_conf=totalConf["versioninfo_conf"]; channel_conf=totalConf[channel_conf_name];versioninfo={};for k,v in versioninfo_conf.iteritems():	versioninfo=v;tool.saveDicToJson(versioninfo,"res/versioninfo.json");localsettingfilename="res/localsetting.json";localsetting_cfg=json.loads(open(localsettingfilename,"r").read());net_conf={};import commands;for k,v in tmp_conf.iteritems():	key=v['tag']+'_'+v['proj'];	net_conf[key]=v;net_conf['ip_conf']=ip_conf;class Cls:	def showMenu(self):		while(1):			print(u"xxxxxxxxxxxxxxxxxxxxxxxxx在线工程xxxxxxxxxxxxxxxxxxxxxxxxxx")			for k,v in channel_conf.iteritems():				tag=v["tag"];				if len(tag)==0:					continue;				print(k + "." + u"标签:" + v['tag'] + u"渠道名:"+v["name"]);			print(u"请输入a,b,c ... 来选择对应工程,按r重新选择");			input=raw_input();			self.proj_item=channel_conf[input];			self.checkNetConf();			break;	def checkNetConf(self):		for k,v in net_conf.iteritems():			if k=='ip_conf':				continue;			tag=v['tag']; 			if tag==self.proj_item['tag']:				cfgurl=ip_conf[v['cfgserver']]['value'];				self.net_key=k;				self.cfg_url=cfgurl+"/fsdzzcfg/"+"%d"%(v['cfgversion'])+"/net_conf.json";				print(u"当前配置文件是:"+self.cfg_url);				break;		data = urllib2.urlopen(self.cfg_url);		html = data.read()		cfg=json.loads(html); 		cfg_item=cfg[self.net_key];		title_dict = {"name" : ["产品描述",0], "author" : ["负责人",0], "tag" : ["版本标签",0], "proj" : ["工程宏",0],		"content" : ["内容描述",0], "cfgserver" : ["配置服url",1], "cfgversion" : ["配制文件版本",0], "ip" : ["账号服地址",1],"port":["账号服端口",0],		"hotupdate_url":["热更新url",1],"log_url":["日志上传url",1],"version":["游戏内显示的版本号",0],"show_svn":["显示SVN版本号",2],		"talkingdata":["talkingdata统计",2],"single_updatekit_dir":["热更新使用单独的更新目录",2,0],		"updatekit_hint_size":["热更新包阀值",3],"pay_test":["计费测试(1分钱可以测试)",2,0],"battle_test":["战斗调试(显示状态机)",2,0],		"show_pub":["游戏内公告",2],"pay_on":["游戏使用计费",2,1],"month_card_type":["",4],		"pay_mode":["切换到第三方支付模式",2,0]};		for k,v in cfg_item.iteritems():			if title_dict[k][1]==4:				continue;			if title_dict[k][1]==0:				str=v;				if isinstance(v,int):					str="%d"%v;				print(title_dict[k][0].decode('utf-8')+":"+str);				continue;			if title_dict[k][1]==2:				idata=v;				statearr=['关闭','开启'];				if len(title_dict[k])>2:					destvalue=title_dict[k][2];					if destvalue!=idata:						print(title_dict[k][0].decode('utf-8')+":"+statearr[v]+u"(警告:正式版理应"+statearr[destvalue]+")");				else:					print(title_dict[k][0].decode('utf-8')+":"+statearr[v]);				continue;		raw_input();		self.showMenu();		#生成工程配表if __name__ == '__main__':	cls = Cls();	cls.showMenu();