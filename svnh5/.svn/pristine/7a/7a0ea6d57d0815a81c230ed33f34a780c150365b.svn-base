/*
author: YOYO
日期:2018-02-22 15:30:09
*/
import BaseCtrl from "../../Libs/BaseCtrl";
import BaseView from "../../Libs/BaseView";
import BaseModel from "../../Libs/BaseModel";
import BehaviorMgr from "../../GameMgrs/BehaviorMgr";

//MVC模块,
const {ccclass, property} = cc._decorator;
let ctrl : Club_SeekListCtrl;
//模型，数据处理
class Model extends BaseModel{
	private seek_name:string = "";
	private seek_list = null;
	constructor()
	{
		super();
		this.seek_list = new Array();
	}
	setSeekName(str){
		this.seek_name = str;
	} 
	getSeekName(){
		return this.seek_name;
	}
	setSeekList(list){
		this.seek_list = list;
	}
	addSeekList(list){
		this.seek_list.concat(list);
	}
	getSeekList(){
		return this.seek_list;
	}
}
//视图, 界面显示或动画，在这里完成
class View extends BaseView{
	ui={
		//在这里声明ui
		btn_close:null,
		btn_seek:null,
		node_editseek:null,
		edit_seek: null,
		club_list:null,
		club_strip:null,
	};
	node=null;
	constructor(model){
		super(model);
		this.node=ctrl.node;
		this.initUi();
		this.addGrayLayer();
	}
	//初始化ui
	initUi()
	{
		this.ui.btn_close = ctrl.btn_close;
		this.ui.btn_seek = ctrl.btn_seek;
		this.ui.node_editseek = ctrl.node_editseek;
		this.ui.edit_seek = ctrl.edit_seek;
		this.ui.club_list = ctrl.club_list;
		this.ui.club_strip = ctrl.club_strip;
	}

	// 
	addClubStrip(){
		let club_node = cc.instantiate(this.ui.club_strip);
		this.ui.club_list.addChild(club_node);
		this.refreshClubList();
	}
	removeAllClubStrip(){
		this.ui.club_list.removeAllChildren();
		this.refreshClubList();
	}

	refreshClubList(){
		let count = this.ui.club_list.childrenCount,
			height = 0;
		if (count != 0){
			let layout = this.ui.club_list.getComponent(cc.Layout),
				gapTop = layout.paddingTop,
				gapBottom = layout.paddingBottom,
				gapY = layout.spacingY,
				node = this.ui.club_list.children[0];

			height = height + gapTop;
			height = height + gapBottom;
			height = height + (count-1) * gapY;
			height = height + node.height * count;
		}
		//设置拖拽层容器大小
		this.ui.club_list.height = height;
	}
}
//c, 控制
@ccclass
export default class Club_SeekListCtrl extends BaseCtrl {
	//这边去声明ui组件

	@property(cc.Node)
	btn_close:cc.Node = null

	@property(cc.Node)
	btn_seek:cc.Node = null

	@property(cc.Node)
	node_editseek:cc.Node = null

	@property(cc.EditBox)
	edit_seek:cc.EditBox = null

	@property(cc.Node)
	club_list:cc.Node = null

	@property(cc.Prefab)
	club_strip:cc.Prefab = null

	//声明ui组件end
	//这是ui组件的map,将ui和控制器或试图普通变量分离


	onLoad (){
		//创建mvc模式中模型和视图
		//控制器
		ctrl = this;
		//数据模型
		this.initMvc(Model,View);
		this.testClubList();
	}

	//定义网络事件
	defineNetEvents()
	{
	}
	//定义全局事件
	defineGlobalEvents()
	{

	}
	//绑定操作的回调
	connectUi()
	{
		this.connect(G_UiType.image,this.ui.btn_close,this.btn_close_cb,"关闭界面");
		this.connect(G_UiType.edit,this.ui.node_editseek,this.editbox_content_cb,"获取控件数据");
		this.connect(G_UiType.image,this.ui.btn_seek,this.btn_seek_cb,"发送搜索");
		
	}
	start () {
	}

	testClubList(){
		let club_list = new Array();
		for (let i=0; i<10; i++){
			club_list.push({
				id:100+i,
				icon:1,
				name:"yo"+i,
				notice:"大家一起浪",
				count:4,
				max:100,
				captain_name:"浪滔天"+i,
			})
		}
		this.refreshClubList(club_list)
	}
	//网络事件回调begin
	refreshClubList(club_list){
		this.model.addSeekList(club_list);
		let count = club_list.length;
		for (let i=0; i<count; i++){
			let data = club_list[i];
			BehaviorMgr.getInstance().setClubSeekData(data);
			this.view.addClubStrip();
		}
	}

	setClubList(club_list){
		this.view.removeAllClubStrip();

		this.model.setSeekList(club_list);
		let count = club_list.length;
		for (let i=0; i<count; i++){
			let data = club_list[i];
			BehaviorMgr.getInstance().setClubSeekData(data);
			this.view.addClubStrip();
		}
	}
	//end
	//全局事件回调begin

	//end
	//按钮或任何控件操作的回调begin
	//点击关闭
	private btn_close_cb(node){
		console.log('node_close_cb')
		this.finish();
	}

	private editbox_content_cb(str, event){
		console.log("editbox_content_cb");
		if (str == "editing-did-ended"){
			let content = this.ui.edit_seek.string;
			this.model.setSeekName(content);
		}
	}

	private btn_seek_cb(node, event){
		console.log('btn_seek_cb:'+this.model.getSeekName())
		//this.model.getSeekName();
	}
	//end
}