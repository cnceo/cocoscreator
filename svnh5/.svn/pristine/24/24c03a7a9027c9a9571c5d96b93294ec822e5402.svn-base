/*
author: JACKY
日期:2018-02-27 18:10:31
*/
import BaseCtrl from "../../Libs/BaseCtrl";
import BaseView from "../../Libs/BaseView";
import BaseModel from "../../Libs/BaseModel";
import QzmjAudio from "../../../Games/Qzmj/QzmjMgr/QzmjAudio"
//MVC模块,
const {ccclass, property} = cc._decorator;
let ctrl : Prefab_ChatCtrl;
//模型，数据处理
class Model extends BaseModel{
	constructor()
	{
		super();
	}
}
//视图, 界面显示或动画，在这里完成
class View extends BaseView{
	ui={
		//在这里声明ui
	};
	node=null;
	constructor(model){
		super(model);
		this.node=ctrl.node;
		this.initUi();
	}
	//初始化ui
	initUi()
	{
	}
}
//c, 控制
@ccclass
export default class Prefab_ChatCtrl extends BaseCtrl {
	//这边去声明ui组件
	@property(cc.Node)
	btn_voiceChat=null; 
	@property(cc.Node)
	btn_chat=null;
	@property(cc.Animation)
	anim_voide=null;  
	@property(cc.Label)
	label_time=null;
	
	//四个玩家语音聊天位置
	@property(cc.Node)
	rpp_chat0=null;
	@property(cc.Node)
	rpp_chat1=null;
	@property(cc.Node)
	rpp_chat2=null;
	@property(cc.Node)
	rpp_chat3=null;    

	@property(cc.Prefab)
	Prefab_ChatMsg=null;
	@property(cc.Prefab)
	Prefab_Chat=null;

	//声明ui组件end
	private CurChatMsg = null;
	//这是ui组件的map,将ui和控制器或试图普通变量分离


	onLoad (){
		//创建mvc模式中模型和视图
		//控制器
		ctrl = this;
		//数据模型
		this.initMvc(Model,View);
		
		// this.initYaYa("test"+Math.random(),"123456","123");
	}

	initYaYa(account:string, password:string, roomId:string){
		//这边会初始化实时语音和录音
		if(cc.sys.isNative){
			jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "GameStart", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",account,password,roomId);
			//jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "initYaYaIM", "()V");
		}
	}

	//定义网络事件
	defineNetEvents()
	{
	}
	//定义全局事件
	defineGlobalEvents()
	{
		this.g_events = {
			'http.sendText':this.http_sendText.bind(this),  
		} 	
	}
	//绑定操作的回调
	connectUi()
	{
		this.connect(G_UiType.image, this.btn_voiceChat, this.btn_voiceChat_cb, '点击语音聊天')
		this.connect(G_UiType.image, this.btn_chat, this.btn_chat_cb, '点击文本聊天')
		this.btn_voiceChat.on(cc.Node.EventType.TOUCH_START, this.btn_voiceChatBegin_cb,this);
		this.btn_voiceChat.on(cc.Node.EventType.TOUCH_CANCEL, this.btn_voiceChatCancel_cb,this);
		
	}
	start () {
	}
	//网络事件回调begin
	http_sendText(msg){
		// if(this.CurChatMsg!=null){
		// 	this.CurChatMsg.getComponent('Prefab_ChatMsg').chatOver();
		// }
		let prefab_ChatMsg = cc.instantiate(this.Prefab_ChatMsg);
		this.CurChatMsg = prefab_ChatMsg;
		this.rpp_chat0.addChild(prefab_ChatMsg);
		(msg.text != undefined)?prefab_ChatMsg.getComponent(prefab_ChatMsg.name).setMsg(msg.text):prefab_ChatMsg.getComponent(prefab_ChatMsg.name).setImg(msg.img)
		QzmjAudio.getInstance().playVoiceAudio(msg.textId);
	}
	//end
	//全局事件回调begin
	//end
	//按钮或任何控件操作的回调begin
	private btn_chat_cb( ):void{
		this.start_sub_module(G_MODULE.ChatNode);
	}

	private btn_voiceChat_cb(event):void{
		console.log("语音录制结束")
		if(cc.sys.isNative){
			jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "onStopRecord", "()V");
		}
		this.anim_voide.node.active = false;
		this.label_time.node.active = false;
		this.playVoide();
		this.unscheduleAllCallbacks();
	}

	private btn_voiceChatBegin_cb(event):void{
		if(event.target._isTouchEnabledEx) {
			console.log("录音")
			if(cc.sys.isNative){
				jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "startRecord", "()V");
			}
			//显示动画
			this.anim_voide.node.active = true;
			this.anim_voide.play();
			//读秒 60s
			this.label_time.node.active = true;
			this.label_time.string = 60;
			this.schedule(this.timeCallback, 1);
		}
	}
	private btn_voiceChatCancel_cb(event):void{
		console.log("语音录制取消") 
            if(event.target._isTouchEnabledEx) {
				if(cc.sys.isNative){
					jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "onStopRecord", "()V");
				}
		}
		this.label_time.node.active = false;
		this.anim_voide.node.active = false;
		this.playVoide();
		this.unscheduleAllCallbacks();
	}
	//end
	private timeCallback(dt) {
		let number = parseInt(this.label_time.string) -1;
		if(number==0){
			if(cc.sys.isNative){
				jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "onStopRecord", "()V");
			}
			this.anim_voide.node.active = false;
			this.label_time.node.active = false;
		}
		this.label_time.string = parseInt(this.label_time.string) -1;
	}
	private playVoide(){
		let prefab_ChatMsg = cc.instantiate(this.Prefab_ChatMsg);
		this.rpp_chat0.addChild(prefab_ChatMsg);
		prefab_ChatMsg.getComponent(prefab_ChatMsg.name).setVoide();
	}
}