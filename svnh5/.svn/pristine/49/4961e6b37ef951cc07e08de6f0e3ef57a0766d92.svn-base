/*
author: YOYO
日期:2018-03-02 14:07:09
*/
import BaseModel from "../../../Plat/Libs/BaseModel";
import BaseView from "../../../Plat/Libs/BaseView";
import BaseCtrl from "../../../Plat/Libs/BaseCtrl";
import BullConst from "../BullMgr/BullConst";
import RoomMgr from "../../../Plat/GameMgrs/RoomMgr";

//MVC模块,
const {ccclass, property} = cc._decorator;
let ctrl : Prefab_bull_roomInfoCtrl;
//模型，数据处理
class Model extends BaseModel{
    roomId:number = null                //房间id
    curRounds:number =null              //当前的局数
	constructor()
	{
		super();
	}
}
//视图, 界面显示或动画，在这里完成
class View extends BaseView{
	ui={
        //在这里声明ui
        lbl_roomId:null,
        lbl_roomRounds:null
	};
	node=null;
	constructor(model){
		super(model);
		this.node=ctrl.node;
		this.initUi();
	}
	//初始化ui
	initUi()
	{
        this.ui.lbl_roomId = ctrl.lbl_roomId;
        this.ui.lbl_roomRounds = ctrl.lbl_roomRounds;
    }
    
    updateRoomId(){
        this.ui.lbl_roomId.string = this.model.roomId;
    }

    updateRoomRounds(){
        this.ui.lbl_roomRounds.string = this.model.curRounds;
    }
}
//c, 控制
@ccclass
export default class Prefab_bull_roomInfoCtrl extends BaseCtrl {
    view:View = null
    model:Model = null
	//这边去声明ui组件
    @property(cc.Label)
    lbl_roomId:cc.Label = null
    @property(cc.Label)
    lbl_roomRounds:cc.Label = null
	//声明ui组件end
	//这是ui组件的map,将ui和控制器或试图普通变量分离


	onLoad (){
		//创建mvc模式中模型和视图
		//控制器
		ctrl = this;
		//数据模型
		this.initMvc(Model,View);
	}

	//定义网络事件
	defineNetEvents()
	{
        this.n_events = {
            'http.reqRoomInfo':this.http_reqRoomInfo, 
        };
        this.n_events[BullConst.clientEvent.onStart] = this.onStart;
	}
	//定义全局事件
	defineGlobalEvents()
	{

	}
	//绑定操作的回调
	connectUi()
	{
	}
	start () {
	}
    //网络事件回调begin
    
    /*
    servertime_now:null,                //服务器时间
            servertime_next:null,               //服务器时间
            curRounds:null,                     //当前的局数
    */
   onStart(msg){
        this.model.curRounds = msg.curRounds;
        this.view.updateRoomRounds();
    }

    http_reqRoomInfo() 
	{  
        let roomInfo = RoomMgr.getInstance().roominfo;
        console.log('http_reqRoomInfo= ', roomInfo)
        this.model.roomId = roomInfo.id;
        this.model.curRounds = roomInfo.roundcount;
        this.view.updateRoomId();
        this.view.updateRoomRounds();
    }  

	//end
	//全局事件回调begin
	//end
	//按钮或任何控件操作的回调begin
	//end
}