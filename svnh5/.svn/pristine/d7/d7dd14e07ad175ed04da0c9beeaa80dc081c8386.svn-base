import BaseModel from "../../Libs/BaseModel";
import BaseCtrl from "../../Libs/BaseCtrl";
import BaseView from "../../Libs/BaseView";
import UiMgr from "../../GameMgrs/UiMgr";

const {ccclass, property} = cc._decorator;
let ctrl : Club_Application;
//模型，数据处理
class Model extends BaseModel{
    askList:any = [];
    blackList:any = [];
	constructor()
	{
        super();
        this.addAskListData();
        this.addBlackListData();
	}
    addAskListData(){
        var askCount = 10;
        for(let i = 0; i < askCount; i++){
            this.askList[i] = {
                userName : '狗旺旺'+ i,
                id : i,
                spHead : '' + i,
                clubID : '' + i,
                playerID : '' + i,
                rank : 0,
            }
        }
    }
    addBlackListData(){
        var blackListCount = 7;
        for(let i = 0; i < blackListCount; i++){
            this.blackList[i] = {
                userName : '傻狗' + i,
                id : i,
                spHead : '' + i,
                clubID : '' + i,
                playerID : '' + i,
                rank : 0,
            }
        }
    }
}

class View extends BaseView{
    constructor(model){
        super(model);
		this.node=ctrl.node;
        this.addGrayLayer();
        this.initUi();
        this.initAskList();
        this.initBlackList();
    }
    ui = {
        listPanel: ctrl.ListPanel,
        askListContent: ctrl.AskListContent,
        blackListContent: ctrl.BlackListContent,
        blackListChange: ctrl.BlackListChange,
        blackListItem: ctrl.BlackListItem,
        askListItem: ctrl.AskListItem,
    },
    public initUi(){
    
    }
    
    initAskList(){
        for(let i = 0; i < this.model.askList.length; i++){
            let item = cc.instantiate(this.ui.askListItem);
            item.parent = this.ui.askListContent;
            item.getComponent("Club_AskListItemCtrl").LabUserName.string = this.model.askList[i].userName;
        }
    }
    initBlackList(){
        for(let i = 0; i < this.model.blackList.length; i++){
            let item = cc.instantiate(this.ui.blackListItem);
            item.parent = this.ui.blackListContent;
            item.getComponent("Club_BlackListItemCtrl").LabUserName.string = this.model.blackList[i].userName;
        }
    }

    public showAni(action){
        this.ui.listPanel.runAction(action);
    }
}
@ccclass
export default class Club_Application extends BaseCtrl {
    @property({
        tooltip : '界面节点',
        type : cc.Node
    })
    ListPanel : cc.Node = null;

    @property({
        tooltip : '申请列表容器',
        type : cc.Node
    })
    AskListContent : cc.Node = null;

    @property({
        tooltip : '黑名单容器',
        type : cc.Node
    })
    BlackListContent : cc.Node = null;

    @property({
        tooltip : '黑名单变更按钮',
        type : cc.Node
    })
    BlackListChange : cc.Node = null;

    @property({
        tooltip : '黑名单item预置'
        type : cc.Prefab
    })
    BlackListItem : cc.Prefab = null

    @property({
        tooltip : '申请列表item预置'
        type : cc.Prefab
    })
    AskListItem : cc.Prefab = null

    onLoad () {
        //创建mvc模式中模型和视图
		//控制器
		ctrl = this;
		//初始化mvc
		this.initMvc(Model,View); 
        let action = cc.sequence(
            cc.show(),
            cc.moveBy(0.3, -620, 0)) 
        this.view.showAni(action);
    },
    //定义网络事件
	defineNetEvents () {}
	//定义全局事件
	defineGlobalEvents () {}
	//绑定操作的回调
    connectUi () {
        this.connect(G_UiType.button, this.node, this.clickClose, '关闭界面')
        this.connect(G_UiType.button, this.view.ui.blackListChange, this.blackListChangeCB, '开始黑名单变更操作')
	}
	//网络事件回调begin
 
	//end
	//全局事件回调begin
	//end
    //按钮或任何控件操作的回调begin

    public refBlackList(){
        let lastIndex = this.model.blackList.length - 1;
        let item = cc.instantiate(this.view.ui.blackListItem);
        item.parent = this.view.ui.blackListContent;
        item.active = true;
        item.getComponent("Club_BlackListCtrl").LabUserName.string = this.model.blackList[lastIndex].userName;
    }
    //start () {
    //},
    clickClose(){
        let action = cc.sequence(
            cc.moveBy(0.3, 620, 0),
            cc.callFunc(function(){
            console.log('关闭')
                ctrl.finish();
            })
        )
        this.ui.listPanel.runAction(action);
    }
    blackListChangeCB(event){
        let items = this.ui.blackListContent.children;
        let count = items.length;
        for(let i = 0; i<count; i++){
            let bshowit = items[i].getChildByName('btnRemove').active; 
            items[i].getChildByName('btnRemove').active = !bshowit;
        }
    }

    // update (dt) {},
}
